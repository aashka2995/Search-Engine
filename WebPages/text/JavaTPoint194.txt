https://www.javatpoint.com/data-structure-tutorial
Data Structures | DS Tutorial - javatpoint ? Home Data Structure C C++ C# Java SQL HTML CSS JavaScript Ajax Android Cloud Design Pattern Quiz Projects Interview Q Comment Forum DS Tutorial DS Tutorial DS Introduction DS Algorithm Asymptotic Analysis DS Pointer DS Structure DS Array DS Array 2D Array DS Linked List Linked List Doubly Linked List Circular Linked List Circular Doubly List DS Stack DS Stack Array Implementation Linked List Implementation DS Queue DS Queue Array Representation Linked List Representation Circular Queue DS Tree DS Tree Binary Tree Binary Search Tree AVL Tree B Tree B+ Tree DS Graph DS Graph Graph Implementation BFS Algorithm DFS Algorithm Spanning Tree DS Searching Linear Search Binary Search DS Sorting Bubble Sort Bucket Sort Comb Sort Counting Sort Heap Sort Insertion Sort Merge Sort Quick Sort Radix Sort Selection Sort Shell Sort Bitonic Sort Cocktail Sort Cycle Sort Tim Sort next ? Data Structures Tutorial Data Structures (DS) tutorial provides basic and advanced concepts of Data Structure. Our Data Structure tutorial is designed for beginners and professionals. Data Structure is a way to store and organize data so that it can be used efficiently. Our Data Structure tutorial includes all topics of Data Structure such as Array, Pointer, Structure, Linked List, Stack, Queue, Graph, Searching, Sorting, Programs, etc. Data Structures Index DS Basics DS Tutorial DS Introduction DS Algorithm Ds Asymptotic Analysis DS Pointer DS Structure DS Array Array 2D Array DS Linked List Linked List Insertion at beginning Insertion at end Insertion after specified node Deletion at beginning Deletion at end Deletion after specified node Traversing Searching Doubly Linked List Insertion at beginning Insertion at end Insertion after specified node Deletion at beginning Deletion at end Deletion of node having given data Traversing Searching Circular Linked List Insertion at beginning Insertion at end Deletion at beginning Deletion at the end Traversing Searching Circular Doubly List Insertion at beginning Insertion at end Deletion at beginning Deletion at the end DS Stack DS Stack Array Implementation Linked List Implementation DS Queue DS Queue Array Implementation Linked List Implementation Circular Queue DS Tree Tree Binary Tree Pre-order Traversal In-order Traversal Post-order Traversal Binary Search Tree Searching in BST Insertion in BST Deletion in BST AVL Tree Insertion in AVL Tree LL Rotation LR Rotation RL Rotation RR Rotation Deletion in AVL Tree B Tree B+ Tree Red Black Tree DS Graph DS Graph Graph Implementation BFS Algorithm DFS Algorithm Spanning Tree Prim's Algorithm Kruskal's Algorithm DS Searching Linear Search Binary Search DS Sorting Bubble Sort Bucket Sort Comb Sort Counting Sort Heap Sort Insertion Sort Merge Sort Quick Sort Radix Sort Selection Sort Shell Sort Bitonic Sort Cocktail Sort Cycle Sort Tim Sort Interview Questions DS Interview Questions Singly Linked List Programs Program to create and display a singly linked list Program to create a singly linked list of n nodes and count the number of nodes Program to create a singly linked list of n nodes and display it in reverse order Program to delete a new node from the beginning of the singly linked list Program to delete a new node from the middle of the singly linked list Program to delete a node from the end of the singly linked list Program to determine whether a singly linked list is the palindrome Program to find the maximum and minimum value node from a singly linked list Program to insert a new node at the middle of the singly linked list Program to insert a new node at the beginning of the singly linked list Program to insert a new node at the end of the singly linked list Program to remove duplicate elements from a singly linked list Program to search an element in a singly linked list Program to sort the elements of the singly linked list Program to swap nodes in a singly linked list without swapping data Program to swap the last element of the singly linked list from the first one Doubly Linked List Programs Program to Convert a Given Binary Tree to Doubly Linked List Program to Create a Doubly Linked List From a Ternary Tree Program to Create a Doubly Linked List of N Nodes and Count the Number of Nodes Program to Create a Doubly Linked List of N Nodes and Display it in Reverse Order Program to Create and Display a Doubly Linked List Program to Delete a New Node From the Beginning of the Doubly Linked List Program to Delete a New Node From the End of the Doubly Linked List Program to Delete a New Node From the Middle of the Doubly Linked List Program to Find the Maximum and Minimum Value Node From a Doubly Linked List Program to Insert a New Node at the Beginning of the Doubly Linked List Program to Insert a New Node at the End of Doubly Linked List Program to Insert a New Node at the Middle of Doubly Linked List Program to Remove Duplicate Elements From a Doubly Linked List Program to Rotate Doubly Linked List by N Nodes Program to Search an Element in a Doubly Linked List Program to Sort the Elements of the Doubly Linked List Circular Linked List Programs Program to Create a Circular Linked List of N Nodes and Count the Number of Nodes Program to Create a Circular Linked List of N Nodes and Display it in Reverse Order Program to Create and Display a Circular Linked List Program to Delete a New Node From the Beginning of the Circular Linked List Program to Delete a New Node From the End of the Circular Linked List Program to Delete a New Node From the Middle of the Circular Linked List Program to Find the Maximum and Minimum Value Node From a Circular Linked List Program to Insert a New Node at the Beginning of the Circular Linked List Program to Insert a New Node at the End of the Circular Linked List Program to Insert a New Node at the Middle of the Circular Linked List Program to Remove Duplicate Elements From a Circular Linked List Program to Search an Element in a Circular Linked List Program to Sort the Elements of the Circular Linked List Tree Programs Program to Calculate the Difference Between the Sum of the Odd Level and Even Level Nodes of a Binary Tree Program to Construct a Binary Search Tree and Perform Deletion and Inorder Traversal Program to Convert Binary Tree to Binary Search Tree Program to Determine Whether all Leaves are at Same Level Program to Determine Whether two Trees are Identical Program to Find Maximum Width of a Binary Tree Program to Find the Largest Element in a Binary Tree Program to Find the Maximum Depth or Height of a Tree Program to Find the Nodes Which are at the Maximum Distance in a Binary Tree Program to Find the Smallest Element in a Binary Tree Program to Find the Sum of all the Nodes of a Binary Tree Program to Find the Total Number of Possible Binary Search Trees with N Keys Program to Implement Binary Tree using the Linked List Program to Search a Node in a Binary Tree Prerequisite Before learning Data Structure, you must have the basic knowledge of C. Audience Our Data Structure tutorial is designed to help beginners and professionals. Problem We assure that you will not find any problem in this Data Structure tutorial. But if there is any mistake, please post it in the contact form. Next TopicData Structure Introduction next ? Help Others, Please Share Learn Latest Tutorials Openpyxl Tally Godot Spring Boot Gradle UML ANN ES6 Flutter Selenium Py Firebase Cobol Preparation Aptitude Reasoning Verbal A. Interview Company Trending Technologies AI AWS Selenium Cloud Hadoop ReactJS D. Science Angular 7 Blockchain Git ML DevOps B.Tech / MCA DBMS DS DAA OS C. Network Compiler D. COA D. Math. E. Hacking C. Graphics Software E. Web Tech. Cyber Sec. Automata C C++ Java .Net Python Programs Control S. Data Mining Javatpoint Services JavaTpoint offers too many high quality services. Mail us on hr@javatpoint.com, to get more information about given services. Website Designing Website Development Java Development PHP Development WordPress Graphic Designing Logo Digital Marketing On Page and Off Page SEO PPC Content Development Corporate Training Classroom and Online Training Data Entry Training For College Campus JavaTpoint offers college campus training on Core Java, Advance Java, .Net, Android, Hadoop, PHP, Web Technology and Python. Please mail your requirement at hr@javatpoint.com. Duration: 1 week to 2 week Like/Subscribe us for latest updates or newsletter Learn TutorialsLearn JavaLearn Data StructuresLearn C ProgrammingLearn C++ TutorialLearn C# TutorialLearn PHP TutorialLearn HTML TutorialLearn JavaScript TutorialLearn jQuery TutorialLearn Spring Tutorial Our WebsitesJavatpoint.comHindi100.comLyricsia.comQuoteperson.comJobandplacement.com Our Services Website Development Android Development Website Designing Digital Marketing Summer Training Industrial Training College Campus Training Contact Address: G-13, 2nd Floor, Sec-3 Noida, UP, 201301, India Contact No: 0120-4256464, 9990449935Contact Us Subscribe Us Privacy PolicySitemap About Me © Copyright 2011-2018 www.javatpoint.com. All rights reserved. Developed by JavaTpoint.
