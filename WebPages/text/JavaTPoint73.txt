https://www.javatpoint.com/java-math
Java Math class with Methods - Javatpoint ? Home Java C C++ C# Servlet JSP EJB Struts2 Mail Hibernate Spring Android Design P Quiz Projects Interview Q Comment Forum Training Java Training Java Tutorial What is Java History of Java Features of Java C++ vs Java Hello Java Program Program Internal How to set path? JDK, JRE and JVM JVM: Java Virtual Machine Java Variables Java Data Types Unicode System Operators Keywords Control Statements Java If-else Java Switch Java For Loop Java While Loop Java Do While Loop Java Break Java Continue Java Comments Java Programs Java Object Class Java OOPs Concepts Naming Convention Object and Class Constructor static keyword this keyword Java Inheritance Inheritance(IS-A) Aggregation(HAS-A) Java Polymorphism Method Overloading Method Overriding Covariant Return Type super keyword Instance Initializer block final keyword Runtime Polymorphism Dynamic Binding instanceof operator Java Abstraction Abstract class Interface Abstract vs Interface Java Encapsulation Package Access Modifiers Encapsulation Java Array Java Array Java OOPs Misc Object class Object Cloning Math class Wrapper Class Java Recursion Call By Value strictfp keyword javadoc tool Command Line Arg Object vs Class Overloading vs Overriding Java String Java Regex Exception Handling Java Inner classes Java Multithreading Java I/O Java Networking Java AWT & Events Java Swing JavaFX Java Applet Java Reflection Java Date Java Conversion Java Collection Java JDBC Java Misc Java New Features RMI Internationalization Interview Questions Java MCQ next ? ? prev Java Math class Java Math class provides several methods to work on math calculations like min(), max(), avg(), sin(), cos(), tan(), round(), ceil(), floor(), abs() etc. Unlike some of the StrictMath class numeric methods, all implementations of the equivalent function of Math class can't define to return the bit-for-bit same results. This relaxation permits implementation with better-performance where strict reproducibility is not required. If the size is int or long and the results overflow the range of value, the methods addExact(), subtractExact(), multiplyExact(), and toIntExact() throw an ArithmeticException. For other arithmetic operations like increment, decrement, divide, absolute value, and negation overflow occur only with a specific minimum or maximum value. It should be checked against the maximum and minimum value as appropriate. Example 1 
public class JavaMathExample1  
{  
    public static void main(String[] args)   
    {  
        double x = 28;  
        double y = 4;  
        
        // return the maximum of two numbers
        System.out.println("Maximum number of x and y is: " +Math.max(x, y)); 
        
        // return the square root of y 
        System.out.println("Square root of y is: " + Math.sqrt(y)); 
        
        //returns 28 power of 4 i.e. 28*28*28*28  
        System.out.println("Power of x and y is: " + Math.pow(x, y));    

        // return the logarithm of given value     
        System.out.println("Logarithm of x is: " + Math.log(x)); 
        System.out.println("Logarithm of y is: " + Math.log(y));
        
        // return the logarithm of given value when base is 10    
        System.out.println("log10 of x is: " + Math.log10(x)); 
        System.out.println("log10 of y is: " + Math.log10(y));  
        
        // return the log of x + 1
        System.out.println("log1p of x is: " +Math.log1p(x));  

        // return a power of 2  
        System.out.println("exp of a is: " +Math.exp(x));  
        
        // return (a power of 2)-1
        System.out.println("expm1 of a is: " +Math.expm1(x));
    }  
}  
 Test it Now Output: 
Maximum number of x and y is: 28.0
Square root of y is: 2.0
Power of x and y is: 614656.0
Logarithm of x is: 3.332204510175204
Logarithm of y is: 1.3862943611198906
log10 of x is: 1.4471580313422192
log10 of y is: 0.6020599913279624
log1p of x is: 3.367295829986474
exp of a is: 1.446257064291475E12
expm1 of a is: 1.446257064290475E12
 Example 2 
public class JavaMathExample2  
{  
    public static void main(String[] args)   
    {  
        double a = 30;  
        
        // converting values to radian  
        double b = Math.toRadians(a); 
        
        // return the trigonometric sine of a    
        System.out.println("Sine value of a is: " +Math.sin(a));  
        
        // return the trigonometric cosine value of a
        System.out.println("Cosine value of a is: " +Math.cos(a));
        
        // return the trigonometric tangent value of a
        System.out.println("Tangent value of a is: " +Math.tan(a));
        
        // return the trigonometric arc sine of a    
        System.out.println("Sine value of a is: " +Math.asin(a));  
        
        // return the trigonometric arc cosine value of a
        System.out.println("Cosine value of a is: " +Math.acos(a));
        
        // return the trigonometric arc tangent value of a
        System.out.println("Tangent value of a is: " +Math.atan(a));

        // return the hyperbolic sine of a    
        System.out.println("Sine value of a is: " +Math.sinh(a));  
        
        // return the hyperbolic cosine value of a
        System.out.println("Cosine value of a is: " +Math.cosh(a));
        
        // return the hyperbolic tangent value of a
        System.out.println("Tangent value of a is: " +Math.tanh(a));
    }  
}  
 Test it Now Output: 
Sine value of a is: -0.9880316240928618
Cosine value of a is: 0.15425144988758405
Tangent value of a is: -6.405331196646276
Sine value of a is: NaN
Cosine value of a is: NaN
Tangent value of a is: 1.5374753309166493
Sine value of a is: 5.343237290762231E12
Cosine value of a is: 5.343237290762231E12
Tangent value of a is: 1.0
 Java Math Methods The java.lang.Math class contains various methods for performing basic numeric operations such as the logarithm, cube root, and trigonometric functions etc. The various java math methods are as follows: Basic Math methods Method Description Math.abs() It will return the Absolute value of the given value. Math.max() It returns the Largest of two values. Math.min() It is used to return the Smallest of two values. Math.round() It is used to round of the decimal numbers to the nearest value. Math.sqrt() It is used to return the square root of a number. Math.cbrt() It is used to return the cube root of a number. Math.pow() It returns the value of first argument raised to the power to second argument. Math.signum() It is used to find the sign of a given value. Math.ceil() It is used to find the smallest integer value that is greater than or equal to the argument or mathematical integer. Math.copySign() It is used to find the Absolute value of first argument along with sign specified in second argument. Math.nextAfter() It is used to return the floating-point number adjacent to the first argument in the direction of the second argument. Math.nextUp() It returns the floating-point value adjacent to d in the direction of positive infinity. Math.nextDown() It returns the floating-point value adjacent to d in the direction of negative infinity. Math.floor() It is used to find the largest integer value which is less than or equal to the argument and is equal to the mathematical integer of a double value. Math.floorDiv() It is used to find the largest integer value that is less than or equal to the algebraic quotient. Math.random() It returns a double value with a positive sign, greater than or equal to 0.0 and less than 1.0. Math.rint() It returns the double value that is closest to the given argument and equal to mathematical integer. Math.hypot() It returns sqrt(x2 +y2) without intermediate overflow or underflow. Math.ulp() It returns the size of an ulp of the argument. Math.getExponent() It is used to return the unbiased exponent used in the representation of a value. Math.IEEEremainder() It is used to calculate the remainder operation on two arguments as prescribed by the IEEE 754 standard and returns value. Math.addExact() It is used to return the sum of its arguments, throwing an exception if the result overflows an int or long. Math.subtractExact() It returns the difference of the arguments, throwing an exception if the result overflows an int. Math.multiplyExact() It is used to return the product of the arguments, throwing an exception if the result overflows an int or long. Math.incrementExact() It returns the argument incremented by one, throwing an exception if the result overflows an int. Math.decrementExact() It is used to return the argument decremented by one, throwing an exception if the result overflows an int or long. Math.negateExact() It is used to return the negation of the argument, throwing an exception if the result overflows an int or long. Math.toIntExact() It returns the value of the long argument, throwing an exception if the value overflows an int. Logarithmic Math Methods Method Description Math.log() It returns the natural logarithm of a double value. Math.log10() It is used to return the base 10 logarithm of a double value. Math.log1p() It returns the natural logarithm of the sum of the argument and 1. Math.exp() It returns E raised to the power of a double value, where E is Euler's number and it is approximately equal to 2.71828. Math.expm1() It is used to calculate the power of E and subtract one from it. Trigonometric Math Methods Method Description Math.sin() It is used to return the trigonometric Sine value of a Given double value. Math.cos() It is used to return the trigonometric Cosine value of a Given double value. Math.tan() It is used to return the trigonometric Tangent value of a Given double value. Math.asin() It is used to return the trigonometric Arc Sine value of a Given double value Math.acos() It is used to return the trigonometric Arc Cosine value of a Given double value. Math.atan() It is used to return the trigonometric Arc Tangent value of a Given double value. Hyperbolic Math Methods Method Description Math.sinh() It is used to return the trigonometric Hyperbolic Cosine value of a Given double value. Math.cosh() It is used to return the trigonometric Hyperbolic Sine value of a Given double value. Math.tanh() It is used to return the trigonometric Hyperbolic Tangent value of a Given double value. Angular Math Methods Method Description Math.toDegrees It is used to convert the specified Radians angle to equivalent angle measured in Degrees. Math.toRadians It is used to convert the specified Degrees angle to equivalent angle measured in Radians. Next TopicWrapper class in Java ? prev next ? Help Others, Please Share Learn Latest Tutorials Openpyxl Tally Godot Spring Boot Gradle UML ANN ES6 Flutter Selenium Py Firebase Cobol Preparation Aptitude Reasoning Verbal A. Interview Company Trending Technologies AI AWS Selenium Cloud Hadoop ReactJS D. Science Angular 7 Blockchain Git ML DevOps B.Tech / MCA DBMS DS DAA OS C. Network Compiler D. COA D. Math. E. Hacking C. Graphics Software E. Web Tech. Cyber Sec. Automata C C++ Java .Net Python Programs Control S. Data Mining Javatpoint Services JavaTpoint offers too many high quality services. Mail us on hr@javatpoint.com, to get more information about given services. Website Designing Website Development Java Development PHP Development WordPress Graphic Designing Logo Digital Marketing On Page and Off Page SEO PPC Content Development Corporate Training Classroom and Online Training Data Entry Training For College Campus JavaTpoint offers college campus training on Core Java, Advance Java, .Net, Android, Hadoop, PHP, Web Technology and Python. Please mail your requirement at hr@javatpoint.com. Duration: 1 week to 2 week Like/Subscribe us for latest updates or newsletter Learn TutorialsLearn JavaLearn Data StructuresLearn C ProgrammingLearn C++ TutorialLearn C# TutorialLearn PHP TutorialLearn HTML TutorialLearn JavaScript TutorialLearn jQuery TutorialLearn Spring Tutorial Our WebsitesJavatpoint.comHindi100.comLyricsia.comQuoteperson.comJobandplacement.com Our Services Website Development Android Development Website Designing Digital Marketing Summer Training Industrial Training College Campus Training Contact Address: G-13, 2nd Floor, Sec-3 Noida, UP, 201301, India Contact No: 0120-4256464, 9990449935Contact Us Subscribe Us Privacy PolicySitemap About Me © Copyright 2011-2018 www.javatpoint.com. All rights reserved. Developed by JavaTpoint.
