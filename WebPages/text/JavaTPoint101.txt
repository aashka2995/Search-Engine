https://www.javatpoint.com/internationalization-in-java
Java Internationalization - javatpoint ? Home Java C C++ C# Servlet JSP EJB Struts2 Mail Hibernate Spring Android Design P Quiz Projects Interview Q Comment Forum Training Basics of Java OOPs Concepts Java String Java Regex Exception Handling Java Inner classes Java Multithreading Java I/O Java Networking Java AWT Java Swing JavaFX Java Applet Java Reflection Java Date Java Conversion Java Collection Java JDBC Java New Features RMI Internationalization Internationalization ResourceBundle class I18N with Date I18N with Time I18N with Number I18N with Currency Interview Questions next>> <<prev Internationalization and Localization in Java Internationalization and Localization Understanding the culturally dependent data Locale class Example of Local class that prints the informations of the default locale Example of Local class that prints english in different languages Example of Local class that print display language of many locales Internationalization is also abbreviated as I18N because there are total 18 characters between the first letter 'I' and the last letter 'N'. Internationalization is a mechanism to create such an application that can be adapted to different languages and regions. Internationalization is one of the powerful concept of java if you are developing an application and want to display messages, currencies, date, time etc. according to the specific region or language. Localization is also abbreviated as I10N because there are total 10 characters between the first letter 'L' and last letter 'N'. Localization is the mechanism to create such an application that can be adapted to a specific language and region by adding locale-specific text and component. Do You Know ? What is the use of Locale class ? How can we globalize the messages (or) What is the use of ResourceBundle class? How can we internationalize the date, time, number, currency and measurements? Understanding the culturally dependent data before starting internationalization Before starting the internationalization, Let's first understand what are the informations that differ from one region to another. There is the list of culturally dependent data: Messages Dates Times Numbers Currencies Measurements Phone Numbers Postal Addresses Labels on GUI components etc. Importance of Locale class in Internationalization An object of Locale class represents a geographical or cultural region. This object can be used to get the locale specific information such as country name, language, variant etc. Fields of Locale class There are fields of Locale class: public static final Locale ENGLISH public static final Locale FRENCH public static final Locale GERMAN public static final Locale ITALIAN public static final Locale JAPANESE public static final Locale KOREAN public static final Locale CHINESE public static final Locale SIMPLIFIED_CHINESE public static final Locale TRADITIONAL_CHINESE public static final Locale FRANCE public static final Locale GERMANY public static final Locale ITALY public static final Locale JAPAN public static final Locale KOREA public static final Locale CHINA public static final Locale PRC public static final Locale TAIWAN public static final Locale UK public static final Locale US public static final Locale CANADA public static final Locale CANADA_FRENCH public static final Locale ROOT Constructors of Locale class There are three constructors of Locale class.They are as follows: Locale(String language) Locale(String language, String country) Locale(String language, String country, String variant) Commonly used methods of Locale class There are given commonly used methods of Locale class. public static Locale getDefault() it returns the instance of current Locale public static Locale[] getAvailableLocales() it returns an array of available locales. public String getDisplayCountry() it returns the country name of this locale object. public String getDisplayLanguage() it returns the language name of this locale object. public String getDisplayVariant() it returns the variant code for this locale object. public String getISO3Country() it returns the three letter abbreviation for the current locale's country. public String getISO3Language() it returns the three letter abbreviation for the current locale's language. Example of Local class that prints the informations of the default locale In this example, we are displaying the informations of the default locale. If you want to get the informations about any specific locale, comment the first line statement and uncomment the second line statement in the main method. 

import java.util.*;
public class LocaleExample {
public static void main(String[] args) {
Locale locale=Locale.getDefault();
//Locale locale=new Locale("fr","fr");//for the specific locale

System.out.println(locale.getDisplayCountry());
System.out.println(locale.getDisplayLanguage());
System.out.println(locale.getDisplayName());
System.out.println(locale.getISO3Country());
System.out.println(locale.getISO3Language());
System.out.println(locale.getLanguage());
System.out.println(locale.getCountry());
	
}
}


 
download this example
 
Output:United States
       English
       English (United States)
       USA
       eng
       en
       US
 Example of Local class that prints english in different languages In this example, we are displaying english language in different language. Let's see how english is written in french and spanish languages. 

import java.util.*;
public class LocaleExample2 {
	public static void main(String[] args) {
		Locale enLocale = new Locale("en", "US");
		Locale frLocale = new Locale("fr", "FR");
		Locale esLocale = new Locale("es", "ES");
		System.out.println("English language name (default): " + 
		                    enLocale.getDisplayLanguage());

		System.out.println("English language name in French: " + 
		                    enLocale.getDisplayLanguage(frLocale));
		System.out.println("English language name in spanish: " + 
                enLocale.getDisplayLanguage(esLocale));
	}

}

 
<strong>Output:</strong>English language name (default): English
       English language name in French: anglais
       English language name in spanish: ingl?s

 Example of Local class that print display language of many locales In this example, we are displaying the display lanuage of many locales. 

import java.util.*;
public class LocaleEx {
public static void main(String[] args) {
Locale[] locales = { new Locale("en", "US"),
 new Locale("es", "ES"), new Locale("it", "IT") }; 

for (int i=0; i< locales.length; i++) { 
 String displayLanguage = locales[i].getDisplayLanguage(locales[i]); 
 System.out.println(locales[i].toString() + ": " + displayLanguage); 
} 
}

}

 
Output:en_US: English
       es_ES: espa?ol
       it_IT: italiano


 What we will learn in Internationalization Tutorial ? ResourceBundle class I18N with Date I18N with Time I18N with Number I18N with Currency I18N with Measurements Next TopicResourceBundle Class <<prev next>> Help Others, Please Share Learn Latest Tutorials Openpyxl Tally Godot Spring Boot Gradle UML ANN ES6 Flutter Selenium Py Firebase Cobol Preparation Aptitude Reasoning Verbal A. Interview Company Trending Technologies AI AWS Selenium Cloud Hadoop ReactJS D. Science Angular 7 Blockchain Git ML DevOps B.Tech / MCA DBMS DS DAA OS C. Network Compiler D. COA D. Math. E. Hacking C. Graphics Software E. Web Tech. Cyber Sec. Automata C C++ Java .Net Python Programs Control S. Data Mining Javatpoint Services JavaTpoint offers too many high quality services. Mail us on hr@javatpoint.com, to get more information about given services. Website Designing Website Development Java Development PHP Development WordPress Graphic Designing Logo Digital Marketing On Page and Off Page SEO PPC Content Development Corporate Training Classroom and Online Training Data Entry Training For College Campus JavaTpoint offers college campus training on Core Java, Advance Java, .Net, Android, Hadoop, PHP, Web Technology and Python. Please mail your requirement at hr@javatpoint.com. Duration: 1 week to 2 week Like/Subscribe us for latest updates or newsletter Learn TutorialsLearn JavaLearn Data StructuresLearn C ProgrammingLearn C++ TutorialLearn C# TutorialLearn PHP TutorialLearn HTML TutorialLearn JavaScript TutorialLearn jQuery TutorialLearn Spring Tutorial Our WebsitesJavatpoint.comHindi100.comLyricsia.comQuoteperson.comJobandplacement.com Our Services Website Development Android Development Website Designing Digital Marketing Summer Training Industrial Training College Campus Training Contact Address: G-13, 2nd Floor, Sec-3 Noida, UP, 201301, India Contact No: 0120-4256464, 9990449935Contact Us Subscribe Us Privacy PolicySitemap About Me © Copyright 2011-2018 www.javatpoint.com. All rights reserved. Developed by JavaTpoint.
