https://www.javatpoint.com/java-main-method
Java main() method - Javatpoint ? Home Java C C++ C# Servlet JSP EJB Struts2 Mail Hibernate Spring Android Design P Quiz Projects Interview Q Comment Forum Training Basics of Java OOPs Concepts Java String Java Regex Exception Handling Java Inner classes Java Multithreading Java I/O Java Networking Java AWT Java Swing JavaFX Java Applet Java Reflection Java Date Java Conversion Java Collection Java JDBC Java Misc Java Main Method System.out.println() Java Memory Management Java ClassLoader Java Heap Java Decompiler Java UUID Java JRE Java SE Java EE Java ME Java vs. JavaScript Java vs. Kotlin Java vs. Python Java Absolute Value How to Create File Delete a File in Java Open a File in Java Sort a List in Java Convert byte Array to String Java Basics How to Compile & Run Java Program How to Run Java Program in Eclipse How to Verify Java Version Ways to Create an Object in Java How to Run a Java program in Windows 10 Runnable Interface in Java Reserve String without reverse() function Reverse String in Java Word by Word Java Keystore Get input from user in Java Read file line by line in Java Take String input in Java How to Read Excel File in Java Read XML File in Java CompletableFuture in Java Java ExecutorService How to iterate Map in Java How to Return an Array in Java How to Sort HashMap by Value How to Sort HashMap in Java Load Factor in HashMap Array vs ArrayList HashMap vs TreeMap HashSet vs HashMap class Compare Two ArrayList in Java Merge Two Arrays in Java Print Array in Java Read CSV File in Java Remove Special Characters from String ArrayIndexOutOfBoundsException ConcurrentModificationException NoSuchElementException NumberFormatException Java New Features RMI Internationalization Interview Questions next ? ? prev Java main() method The main() is the starting point for JVM to start execution of a Java program. Without the main() method, JVM will not execute the program. The syntax of the main() method is: public: It is an access specifier. We should use a public keyword before the main() method so that JVM can identify the execution point of the program. If we use private, protected, and default before the main() method, it will not be visible to JVM. static: You can make a method static by using the keyword static. We should call the main() method without creating an object. Static methods are the method which invokes without creating the objects, so we do not need any object to call the main() method. void: In Java, every method has the return type. Void keyword acknowledges the compiler that main() method does not return any value. main(): It is a default signature which is predefined in the JVM. It is called by JVM to execute a program line by line and end the execution after completion of this method. We can also overload the main() method. String args[]: The main() method also accepts some data from the user. It accepts a group of strings, which is called a string array. It is used to hold the command line arguments in the form of string values. 
main(String args[])
 Here, agrs[] is the array name, and it is of String type. It means that it can store a group of string. Remember, this array can also store a group of numbers but in the form of string only. Values passed to the main() method is called arguments. These arguments are stored into args[] array, so the name args[] is generally used for it. What happens if the main() method is written without String args[]? The program will compile, but not run, because JVM will not recognize the main() method. Remember JVM always looks for the main() method with a string type array as a parameter. Execution Process First, JVM executes the static block, then it executes static methods, and then it creates the object needed by the program. Finally, it executes the instance methods. JVM executes a static block on the highest priority basis. It means JVM first goes to static block even before it looks for the main() method in the program. Example 
class  Demo
{
static 					//static block
{
System.out.println("Static block");
}
public static void main(String args[])	//static method
{
System.out.println("Static method");
}
}
 Output: 
Static block
Static method
 We observe that JVM first executes the static block, if it is present in the program. After that it searches for the main() method. If the main() method is not found, it gives error. Example A program that does not have the main() method gives an error at run time. 
class DemoStaticBlock
{
Static                                  //static block
{
System.out.println("Static block");
}
}	
 Output: 
Error: Main method not found in the class Demo, please define the main method as:
public static void main(String[] args)
or a JavaFX application class must extend javafx.application.Application
 So the main() method should always be written as: 
public static void main(String args[])
 We can interchange public and static and write it as follows: 
static public void main(String args[])
 We can also use the different name for the String type array and write it as: 
static public void main(String[] x)
 Different ways of writing main() method are: 
static public void main(String []x)
static public void main(String...args)
 String...args: It allows the method to accept zero or multiple arguments. There should be exactly three dots between String and array; otherwise, it gives an error. Example A program that has no main() method, but compile and runs successfully. 
abstract class DemoNoMain extends javafx.application.Application
{
static 		//static block
{
System.out.println("Java");
System.exit(0);
}
}
 Output: 
Java
 Overloading of main() method We can also overload the main() method. We can define any number of main() method in the class, but the method signature must be different. Example 
class OverloadMain
{
public static void main(int a)	//overloaded main method
{
System.out.println(a);
}
public static void main(String args[])
{	
System.out.println("main method incoked");
main(6);
}
}
 Output: 
main method invoked
6
 Next TopicJava Tutorial ? prev next ? Help Others, Please Share Learn Latest Tutorials Openpyxl Tally Godot Spring Boot Gradle UML ANN ES6 Flutter Selenium Py Firebase Cobol Preparation Aptitude Reasoning Verbal A. Interview Company Trending Technologies AI AWS Selenium Cloud Hadoop ReactJS D. Science Angular 7 Blockchain Git ML DevOps B.Tech / MCA DBMS DS DAA OS C. Network Compiler D. COA D. Math. E. Hacking C. Graphics Software E. Web Tech. Cyber Sec. Automata C C++ Java .Net Python Programs Control S. Data Mining Javatpoint Services JavaTpoint offers too many high quality services. Mail us on hr@javatpoint.com, to get more information about given services. Website Designing Website Development Java Development PHP Development WordPress Graphic Designing Logo Digital Marketing On Page and Off Page SEO PPC Content Development Corporate Training Classroom and Online Training Data Entry Training For College Campus JavaTpoint offers college campus training on Core Java, Advance Java, .Net, Android, Hadoop, PHP, Web Technology and Python. Please mail your requirement at hr@javatpoint.com. Duration: 1 week to 2 week Like/Subscribe us for latest updates or newsletter Learn TutorialsLearn JavaLearn Data StructuresLearn C ProgrammingLearn C++ TutorialLearn C# TutorialLearn PHP TutorialLearn HTML TutorialLearn JavaScript TutorialLearn jQuery TutorialLearn Spring Tutorial Our WebsitesJavatpoint.comHindi100.comLyricsia.comQuoteperson.comJobandplacement.com Our Services Website Development Android Development Website Designing Digital Marketing Summer Training Industrial Training College Campus Training Contact Address: G-13, 2nd Floor, Sec-3 Noida, UP, 201301, India Contact No: 0120-4256464, 9990449935Contact Us Subscribe Us Privacy PolicySitemap About Me © Copyright 2011-2018 www.javatpoint.com. All rights reserved. Developed by JavaTpoint.
